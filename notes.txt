



Improvement steps


Add color to particles based on velocity

Add texture to background

Sum particles to texture

Particle movement based on texture

FFT on texture

Use FFT for gravity












-----------------
Crystal Detection

For each particle p1, consider all neighbor particles within a given radius {n1, n2, .., n10}

offsets = {n1 - p, n2 - p, ..., n10 - p}

# Consider rotational symmetry with periodicity. Freq of zero is skipped
# Format is (offsetSumX, offsetSumY, nPoints), where nPoints is how many particles contributed to this mean. Used for weighted average over all neighbor cells
sum_per_freq = [(0, 0, 0) for _ in range(7)]





for neighbor in neighbors:
	offset = neighbor - p
	normalized_offset = normalize(offset)
	rotated_offset = offset
	sum_per_freq[1] += float3(offset.xy, 1)
	for freq in [2,3,4,5,6]:
		rotated_offset *= normalized_offset
		sum_per_freq[freq] += float3(rotated_offset.xy, 1)

	




for neighbor in neighbors:
	offset = neighbor - p
	normalized_offset = normalize(offset)
	norm2 = normalized_offset * normalized_offset
	norm4 = norm2 * norm2
	sum_freq6 += float3(offset * norm4 * norm2, 1)



